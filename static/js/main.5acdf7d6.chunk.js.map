{"version":3,"sources":["SparkTheme.jsx","Styled/Styled.jsx","CSSed/useStyles.js","CSSed/CSSed.js","App.js","index.js","CSSed/styles.module.scss"],"names":["ThemeContext","React","createContext","ThemeObject","dark","bg","txt1","txt2","light","SparkTheme","_ref","_ref$mode","mode","children","react_default","a","createElement","Provider","value","styled_components_browser_esm","theme","Fragment","Section","useContext","StyledDiv","Subtitle","Styled","Title","src_SparkTheme","styled","div","_templateObject","h1","_templateObject2","h2","_templateObject3","useStyles","stylesObj","mappedStyle","_","mapValues","className","concat","_useStyles","styles","main","subtitle","withTheme","title","CSSed_Section","App","_useState","useState","_useState2","Object","slicedToArray","isLight","setLightMode","FlexRow","react_switch_default","checked","onChange","App_Section","src_Styled_Styled","src_CSSed_CSSed","App_templateObject","App_templateObject2","ReactDOM","render","src_App","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5acdf7d6.chunk.js","sourcesContent":["import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nexport const ThemeContext = React.createContext();\n\nconst ThemeObject = {\n    dark: { bg: 'black', txt1: '#ccc', txt2: '#888' },\n    light: { bg: 'white', txt1: '#333', txt2: '#777' }\n};\n\nconst SparkTheme = ({ mode = 'light', children }) => {\n    return (\n        <ThemeContext.Provider value={mode}>\n            <ThemeProvider theme={ThemeObject[mode]}>\n                <>{children}</>\n            </ThemeProvider>\n        </ThemeContext.Provider>\n    );\n};\n\nexport default SparkTheme;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { theme } from 'styled-tools';\nimport SparkTheme, { ThemeContext } from '../SparkTheme';\n\nfunction Section() {\n    const theme = useContext(ThemeContext);\n    return (\n        <StyledDiv>\n            <Subtitle>This is {theme} themed via styled component</Subtitle>\n        </StyledDiv>\n    );\n}\n\nconst Styled = () => {\n    return (\n        <StyledDiv>\n            <Title>Styled-Component</Title>\n            <Section />\n            <SparkTheme mode=\"light\">\n                <Section />\n                <SparkTheme mode=\"dark\">\n                    <Section />\n                </SparkTheme>\n            </SparkTheme>\n        </StyledDiv>\n    );\n};\n\nexport default Styled;\n\nconst StyledDiv = styled.div`\n    border: 1px solid black;\n    box-sizing: border-box;\n    background-color: ${theme('bg')};\n`;\n\nconst Title = styled.h1`\n    color: ${theme('txt1')};\n`;\n\nconst Subtitle = styled.h2`\n    color: ${theme('txt2')};\n`;\n","import { useContext } from 'react';\nimport _ from 'lodash';\nimport { ThemeContext } from '../SparkTheme';\n\nfunction useStyles(stylesObj) {\n    const theme = useContext(ThemeContext);\n    const mappedStyle = _.mapValues(stylesObj, className => `${className}_${theme}`);\n    return { mappedStyle, theme };\n}\n\nexport default useStyles;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport stylesObj from './styles.module.scss';\nimport useStyles from './useStyles';\nimport SparkTheme from '../SparkTheme';\n\nfunction Section() {\n    const { mappedStyle: styles, theme } = useStyles(stylesObj);\n    return (\n        <div className={styles.main}>\n            <h2 className={styles.subtitle}>This is {theme} Themed via scss</h2>\n        </div>\n    );\n}\n\nconst CSSed = () => {\n    const { mappedStyle: styles } = useStyles(stylesObj);\n    return (\n        <div className={styles.main}>\n            <h1 className={styles.title}>Scss</h1>\n            <Section />\n            <SparkTheme mode=\"light\">\n                <Section />\n                <SparkTheme mode=\"dark\">\n                    <Section />\n                </SparkTheme>\n            </SparkTheme>\n        </div>\n    );\n};\n\nexport default withTheme(CSSed);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport SparkTheme from './SparkTheme';\nimport Styled from './Styled';\nimport CSSed from './CSSed';\nimport Switch from 'react-switch';\n\nfunction App() {\n    const [isLight, setLightMode] = useState(true);\n\n    return (\n        <div>\n            <FlexRow>\n                <h2>Toggle Theme</h2>\n                <Switch checked={isLight} onChange={checked => setLightMode(checked)} />\n            </FlexRow>\n            <SparkTheme mode={isLight ? 'light' : 'dark'}>\n                <Section>\n                    <Styled />\n                </Section>\n                <Section>\n                    <CSSed />\n                </Section>\n            </SparkTheme>\n        </div>\n    );\n}\n\nexport default App;\n\nconst Section = styled.div`\n    margin-bottom: 24px;\n`;\n\nconst FlexRow = styled.div`\n    display: flex;\n    align-items: center;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__2lDtp\",\"title\":\"styles_title__1g_wc\",\"subtitle\":\"styles_subtitle__3IHQq\"};"],"sourceRoot":""}